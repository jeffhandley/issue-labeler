name: "Labeler: Training"

on:
  workflow_dispatch:
    inputs:
      issues_download:
        description: "Issues: Download Data"
        type: boolean
        default: true
      issues_train:
        description: "Issues: Train Model"
        type: boolean
        default: true
      issues_test:
        description: "Issues: Test Model"
        type: boolean
        default: true

      pulls_download:
        description: "Pulls: Download Data"
        type: boolean
        default: true
      pulls_train:
        description: "Pulls: Train Model"
        type: boolean
        default: true
      pulls_test:
        description: "Pulls: Test Model"
        type: boolean
        default: true

      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string
      limit:
        description: "Max number of items to include in the model (newest items are used)"
        type: number
      page_size:
        description: "The number of items to include on each request."
        type: number
      cache_key_suffix:
        description: "The cache key suffix to use for staged data/models (use 'ACTIVE' to bypass staging)"
        type: string
        required: true
        default: "staged"

env:
  CACHE_KEY: ${{ inputs.cache_key_suffix }}
  REPOSITORY: ${{ inputs.repository || github.repository }}
  LABEL_PREFIX: "area-"
  THRESHOLD: "0.40"
  LIMIT: ${{ inputs.limit }}
  PAGE_SIZE: ${{ inputs.page_size }}

jobs:
  issues-download:
    if: ${{ inputs.issues_download }}
    permissions:
      issues: read
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Download Data"
        uses: jeffhandley/issue-labeler/download@main
        with:
          type: "issues"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          limit: ${{ env.LIMIT }}
          page_size: ${{ env.PAGE_SIZE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  issues-train:
    needs: issues-download
    if: ${{ inputs.issues_train && always() && (needs.issues-download.result == 'success' || needs.issues-download.result == 'skipped') }}
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Train Model"
        uses: jeffhandley/issue-labeler/train@main
        with:
          type: "issues"
          data_cache_key: ${{ env.CACHE_KEY }}
          model_cache_key: ${{ env.CACHE_KEY }}

  issues-test:
    needs: [issues-download, issues-train]
    if: ${{ inputs.issues_test && always() && (needs.issues-download.result == 'success' || needs.issues-download.result == 'skipped') && (needs.issues-train.result == 'success' || needs.issues-train.result == 'skipped') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Test Model"
        uses: jeffhandley/issue-labeler/test@main
        with:
          type: "issues"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          threshold: ${{ env.THRESHOLD }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pulls-download:
    if: ${{ inputs.pulls_download }}
    permissions:
      pull-requests: read
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Download Data"
        uses: jeffhandley/issue-labeler/download@main
        with:
          type: "pulls"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          limit: ${{ env.LIMIT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pulls-train:
    needs: pulls-download
    if: ${{ inputs.pulls_train && always() && (needs.pulls-download.result == 'success' || needs.pulls-download.result == 'skipped') }}
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Train Model"
        uses: jeffhandley/issue-labeler/train@main
        with:
          type: "pulls"
          data_cache_key: ${{ env.CACHE_KEY }}
          model_cache_key: ${{ env.CACHE_KEY }}

  pulls-test:
    needs: [pulls-download, pulls-train]
    if: ${{ inputs.pulls_test && always() && (needs.pulls-download.result == 'success' || needs.pulls-download.result == 'skipped') && (needs.pulls-train.result == 'success' || needs.pulls-train.result == 'skipped') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Test Model"
        uses: jeffhandley/issue-labeler/test@main
        with:
          type: "pulls"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          threshold: ${{ env.THRESHOLD }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
