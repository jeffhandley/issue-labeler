name: "Labeler: Training"

on:
  workflow_dispatch:
    inputs:
      type:
        description: "Issues or Pull Requests"
        type: choice
        required: true
        default: "Both"
        options:
          - "Both"
          - "Issues"
          - "Pull Requests"

      steps:
        description: "Training Steps"
        type: choice
        required: true
        default: "All"
        options:
          - "All"
          - "Download Data"
          - "Train Model"
          - "Test Model"

      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string
      limit:
        description: "Max number of items to download for training/testing the model (newest items are used)"
        type: number
      page_size:
        description: "The number of items to include on each request"
        type: number
      cache_key_suffix:
        description: "The cache key suffix to use for staged data/models (use 'ACTIVE' to bypass staging)"
        type: string
        required: true
        default: "staged"

env:
  CACHE_KEY: ${{ inputs.cache_key_suffix }}
  REPOSITORY: ${{ inputs.repository || github.repository }}
  LABEL_PREFIX: "area-"
  EXCLUDED_AUTHORS: "null"
  THRESHOLD: "0.40"
  LIMIT: ${{ inputs.limit }}
  PAGE_SIZE: ${{ inputs.page_size }}
  JOB_DOWNLOAD: ${{ inputs.steps in ["All", "Download Data"] }}
  JOB_TRAIN: ${{ inputs.steps in ["All", "Train Model"] }}
  JOB_TEST: ${{ inputs.steps in ["All", "Test Model"] }}

jobs:
  download:
    strategy:
      fail-fast: false
      matrix:
        type: ["issues", "pulls"]
    runs-on: ubuntu-latest
    permissions:
      issues: read
      pull-requests: read
    if: ${{ env.JOB_DOWNLOAD }}
    steps:
      - name: "Download Data for ${{ matrix.type == 'issues' && 'Issues' || 'Pull Requests' }}"
        uses: jeffhandley/issue-labeler/download@main
        with:
          type: ${{ matrix.type }}
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          excluded_authors: ${{ env.EXCLUDED_AUTHORS }}
          limit: ${{ env.LIMIT }}
          page_size: ${{ env.PAGE_SIZE }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  train:
    strategy:
      fail-fast: false
      matrix:
        type: ["issues", "pulls"]
    runs-on: ubuntu-latest
    permissions: {}
    needs: download
    if: ${{ env.JOB_TRAIN && (needs.download.result == "success" || !env.JOB_DOWNLOAD) }}
    steps:
      - name: "Train Model for ${{ matrix.type == 'issues' && 'Issues' || 'Pull Requests' }}"
        uses: jeffhandley/issue-labeler/train@main
        with:
          type: ${{ matrix.type }}
          data_cache_key: ${{ env.CACHE_KEY }}
          model_cache_key: ${{ env.CACHE_KEY }}

  test:
    strategy:
      fail-fast: false
      matrix:
        type: ["issues", "pulls"]
    runs-on: ubuntu-latest
    permissions:
      issues: read
      pull-requests: read
    needs: train
    if: ${{ env.JOB_TEST && (needs.train.result == "success" || !env.JOB_TRAIN) }}
    steps:
      - name: "Test Model for ${{ matrix.type == 'issues' && 'Issues' || 'Pull Requests' }}"
        uses: jeffhandley/issue-labeler/test@main
        with:
          type: ${{ matrix.type }}
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          excluded_authors: ${{ env.EXCLUDED_AUTHORS }}
          threshold: ${{ env.THRESHOLD }}
          limit: ${{ env.LIMIT }}
          page_size: ${{ env.PAGE_SIZE }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
