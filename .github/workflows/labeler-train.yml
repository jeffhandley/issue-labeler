name: "Labeler: Training"

on:
  workflow_dispatch:
    inputs:
      type:
        description: "Issues or Pull Requests"
        type: choice
        required: true
        default: Both
        options:
          - Both
          - Issues
          - Pulls

      steps:
        description: "Training Steps"
        type: choice
        required: true
        default: All
        options:
          - All
          - Download Data
          - Train Model
          - Test Model

      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string
      limit:
        description: "Max number of items to download for training/testing the model (newest items are used)"
        type: number
      page_size:
        description: "The number of items to include on each request."
        type: number
      cache_key_suffix:
        description: "The cache key suffix to use for staged data/models (use 'ACTIVE' to bypass staging)"
        type: string
        required: true
        default: "staged"

env:
  CACHE_KEY: ${{ inputs.cache_key_suffix }}
  REPOSITORY: ${{ inputs.repository || github.repository }}
  LABEL_PREFIX: "area-"
  EXCLUDED_AUTHORS: null
  THRESHOLD: "0.40"
  LIMIT: ${{ inputs.limit }}
  PAGE_SIZE: ${{ inputs.page_size }}

jobs:
  download-issues:
    if: ${{ (inputs.type == 'Both' || inputs.type == 'Issues') && (inputs.steps == 'All' || inputs.steps == 'Download Data') }}
    permissions:
      issues: read
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Download Data"
        uses: jeffhandley/issue-labeler/download@main
        with:
          type: "issues"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          excluded_authors: ${{ env.EXCLUDED_AUTHORS }}
          limit: ${{ env.LIMIT }}
          page_size: ${{ env.PAGE_SIZE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  train-issues:
    needs: download-issues
    if: ${{ (inputs.type == 'Both' || inputs.type == 'Issues') && (inputs.steps == 'All' || inputs.steps == 'Train Model') && always() && (needs.download-issues.result == 'success' || needs.download-issues.result == 'skipped') }}
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Train Model"
        uses: jeffhandley/issue-labeler/train@main
        with:
          type: "issues"
          data_cache_key: ${{ env.CACHE_KEY }}
          model_cache_key: ${{ env.CACHE_KEY }}

  test-issues:
    needs: [download-issues, train-issues]
    if: ${{ (inputs.type == 'Both' || inputs.type == 'Issues') && (inputs.steps == 'All' || inputs.steps == 'Test Model') && always() && (needs.download-issues.result == 'success' || needs.download-issues.result == 'skipped') && (needs.train-issues.result == 'success' || needs.train-issues.result == 'skipped') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Test Model"
        uses: jeffhandley/issue-labeler/test@main
        with:
          type: "issues"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          excluded_authors: ${{ env.EXCLUDED_AUTHORS }}
          threshold: ${{ env.THRESHOLD }}
          limit: ${{ env.LIMIT }}
          page_size: ${{ env.PAGE_SIZE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  download-pulls:
    if: ${{ (inputs.type == 'Both' || inputs.type == 'Pulls') && (inputs.steps == 'All' || inputs.steps == 'Download Data') }}
    permissions:
      pull-requests: read
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Download Data"
        uses: jeffhandley/issue-labeler/download@main
        with:
          type: "pulls"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          excluded_authors: ${{ env.EXCLUDED_AUTHORS }}
          limit: ${{ env.LIMIT }}
          page_size: ${{ env.PAGE_SIZE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  train-pulls:
    needs: download-pulls
    if: ${{ (inputs.type == 'Both' || inputs.type == 'Pulls') && (inputs.steps == 'All' || inputs.steps == 'Train Model') && always() && (needs.download-pulls.result == 'success' || needs.download-pulls.result == 'skipped') }}
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Train Model"
        uses: jeffhandley/issue-labeler/train@main
        with:
          type: "pulls"
          data_cache_key: ${{ env.CACHE_KEY }}
          model_cache_key: ${{ env.CACHE_KEY }}

  test-pulls:
    needs: [download-pulls, train-pulls]
    if: ${{ (inputs.type == 'Both' || inputs.type == 'Pulls') && (inputs.steps == 'All' || inputs.steps == 'Test Model') && always() && (needs.download-pulls.result == 'success' || needs.download-pulls.result == 'skipped') && (needs.train-pulls.result == 'success' || needs.train-pulls.result == 'skipped') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Test Model"
        uses: jeffhandley/issue-labeler/test@main
        with:
          type: "pulls"
          cache_key: ${{ env.CACHE_KEY }}
          repository: ${{ env.REPOSITORY }}
          label_prefix: ${{ env.LABEL_PREFIX }}
          excluded_authors: ${{ env.EXCLUDED_AUTHORS }}
          threshold: ${{ env.THRESHOLD }}
          limit: ${{ env.LIMIT }}
          page_size: ${{ env.PAGE_SIZE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
