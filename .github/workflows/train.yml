name: "Train Models"

on:
  workflow_call:
    inputs:
      download_issues:
        description: "Issues: Download Data"
        type: boolean
      train_issues:
        description: "Issues: Train Model"
        type: boolean
      test_issues:
        description: "Issues: Test Model"
        type: boolean
      download_pulls:
        description: "Pulls: Download Data"
        type: boolean
      train_pulls:
        description: "Pulls: Train Model"
        type: boolean
      test_pulls:
        description: "Pulls: Test Model"
        type: boolean

      label_prefix:
        description: "Label Prefix"
        type: string
        required: true
      threshold:
        description: "The minimum confidence score for a label prediction"
        type: number
        required: true

      data_limit:
        description: "Max number of items to include in the model"
        type: number

      github_token:
        description: "The GitHub token (defaults to action token)"
        type: string
      repository:
        description: "The org/repo to download data from (defaults to current repository)"
        type: string
      cache_key_suffix:
        description: "The cache key suffix to use for staging data/models (use 'LIVE' to bypass staging)"
        type: string
        required: true

jobs:
  download-issues:
    if: ${{ inputs.download_issues || inputs.train_issues || inputs.test_issues }}
    permissions:
      issues: read
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Download Data"
        if: ${{ inputs.download_issues }}
        uses: jeffhandley/issue-labeler/download-data@main
        with:
          issues: true
          issue_limit: ${{ inputs.data_limit && fromJSON(inputs.data_limit) || 0 }}
          label_prefix: ${{ inputs.label_prefix }}
          cache_key: ${{ inputs.cache_key_suffix }}
          repository: ${{ inputs.repository || github.repository }}
          github_token: ${{ inputs.github_token || github.token }}

  train-issues:
    needs: download-issues
    if: ${{ inputs.train_issues && always() && (needs.download-issues.result == 'success' || needs.download-issues.result == 'skipped') }}
    permissions:
      actions: write
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Train Model"
        uses: jeffhandley/issue-labeler/train-model@main
        with:
          issues: true
          data_cache_key: ${{ inputs.cache_key_suffix }}
          model_cache_key: ${{ inputs.cache_key_suffix }}

  test-issues:
    needs: [download-issues, train-issues]
    if: ${{ inputs.test_issues && always() && (needs.download-issues.result == 'success' || needs.download-issues.result == 'skipped') && (needs.train-issues.result == 'success' || needs.train-issues.result == 'skipped') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Issues: Test Model"
        uses: jeffhandley/issue-labeler/test-model@main
        with:
          issues: true
          label_prefix: ${{ inputs.label_prefix }}
          threshold: ${{ inputs.threshold }}
          cache_key: ${{ inputs.cache_key_suffix }}
          repository: ${{ inputs.repository || github.repository }}
          github_token: ${{ inputs.github_token || github.token }}

  # download-pulls:
  #   if: ${{ inputs.download_pulls }}
  #   permissions:
  #     pull-requests: read
  #     actions: write
  #   uses: jeffhandley/issue-labeler/download-data@main
  #   with:
  #     pulls: true
  #     pull_limit: ${{ inputs.data_limit && fromJSON(inputs.data_limit) || 0 }}
  #     label_prefix: ${{ inputs.label_prefix }}
  #     cache_key: ${{ inputs.cache_key_suffix }}
  #     repository: ${{ inputs.repository || github.repository }}
  #     github_token: ${{ inputs.github_token || github.token }}

  # train-pulls:
  #   needs: download-pulls
  #   if: ${{ inputs.train_pulls && always() && (needs.download-pulls.result == 'success' || needs.download-pulls.result == 'skipped') }}
  #   permissions:
  #     actions: write
  #   uses: jeffhandley/issue-labeler/train-model@main
  #   with:
  #     pulls: true
  #     data_cache_key: ${{ inputs.cache_key_suffix }}
  #     model_cache_key: ${{ inputs.cache_key_suffix }}

  # test-pulls:
  #   needs: [download-pulls, train-pulls]
  #   if: ${{ inputs.test_pulls && always() && (needs.download-pulls.result == 'success' || needs.download-pulls.result == 'skipped') && (needs.train-pulls.result == 'success' || needs.train-pulls.result == 'skipped') }}
  #   uses: jeffhandley/issue-labeler/test-model@main
  #   with:
  #     pulls: true
  #     label_prefix: ${{ inputs.label_prefix }}
  #     threshold: ${{ inputs.threshold }}
  #     cache_key: ${{ inputs.cache_key_suffix }}
  #     repository: ${{ inputs.repository || github.repository }}
  #     github_token: ${{ inputs.github_token || github.token }}
