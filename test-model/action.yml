name: "Test Issue and/or Pull Models"
description: "Test predictions against the issue and/or pull models by downloading data and comparing predictions against existing labels."

inputs:
  issues:
    description: "Test the issue model"
    required: true
  issue_limit:
    description: "Max number of items to include in the test for issues"
    required: false

  pulls:
    description: "Test the pull model"
    required: true
  pull_limit:
    description: "Max number of items to include in the test for pulls"
    required: false

  label_prefix:
    description: "Label Prefix"
    required: true
  threshold:
    description: "The minimum confidence score for a label prediction"
    required: true

  cache_key:
    description: "The cache key suffix to use for loading the model"
    required: true
  repository:
    description: "The org/repo to download data from (defaults to current repository)"
    required: false
  github_token:
    description: "The GitHub token (defaults to action token)"
    required: true

branding:
  color: "purple"
  icon: "tag"

runs:
  using: "composite"
  steps:
    - name: "Check out repository"
      uses: actions/checkout@v4
      with:
        repository: "jeffhandley/issue-labeler"
        ref: main

    - name: "Restore Issue Model from Cache"
      if: inputs.issues
      id: restore-issue-cache
      uses: actions/cache/restore@v4
      with:
        path: labeler-cache/issue-model.zip
        key: issue-labeler/issues/model/${{ inputs.cache_key }}
        fail-on-cache-miss: true

    - name: "Restore Pull Model from Cache"
      if: inputs.pulls
      id: restore-pull-cache
      uses: actions/cache/restore@v4
      with:
        path: labeler-cache/pull-model.zip
        key: issue-labeler/pulls/model/${{ inputs.pull_model_cache_key }}
        fail-on-cache-miss: true

    - name: "Set up .NET"
      if: inputs.issues || inputs.pulls
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: "9.0.x"

    - name: "Run Tester"
      if: inputs.issues || inputs.pulls
      run: |
        dotnet run -c Release --project ./src/Tester --  \
          ${{ inputs.issues && format('--issue-model "{0}"', 'labeler-cache/issue-model.zip') }} \
          ${{ inputs.issues && inputs.issue_limit != null && format('--issue-limit {0}', inputs.issue_limit) }} \
          ${{ inputs.pulls && format('--pull-model "{0}"', 'labeler-cache/pull-model.zip') }} \
          ${{ inputs.pulls && inputs.pull_limit != null && format('--pull-limit {0}', inputs.pull_limit) }} \
          ${{ format('--label-prefix "{0}"', inputs.label_prefix) }} \
          ${{ format('--threshold {0}', inputs.threshold) }} \
          ${{ format('--repo "{0}"', inputs.repository || github.repository) }} \
          ${{ format('--token "{0}"', inputs.github_token) }}
