name: "Test a prediction model against existing labels"
description: "Test predictions against the issue and/or pull models by downloading data and comparing predictions against existing labels."

branding:
  color: "purple"
  icon: "tag"

inputs:
  type:
    description: "The model to test. Must be either 'issues' or 'pulls'."
    required: true
  label_prefix:
    description: "The label prefix to be used for model training. Must end in a non-alphanumeric character."
    required: true
  threshold:
    description: "The minimum confidence score for a label prediction"
    required: true
  limit:
    description: "Max number of items to download (newest items are downloaded)."
  retries:
    description: "Comma-separated list of retry delays in seconds."
  cache_key:
    description: "The cache key suffix to use for saving data. Default: 'staged'."
    default: "staged"
  repository:
    description: "The org/repo to download data from. Defaults to current repository."

runs:
  using: "composite"
  steps:
    - name: "Validate Inputs"
      shell: bash
      run: |
        if [[ "${{ inputs.type }}" != "issues" && "${{ inputs.type }}" != "pulls" ]]; then
          echo "::error::'type' must be either 'issues' or 'pulls'. Value provided: '${{ inputs.type }}'"
          echo ":x: **ERROR**" >> $GITHUB_STEP_SUMMARY
          echo "\`type\` must be either 'issues' or 'pulls'." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

    - name: "Check out the 'issue-labeler' repo"
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: jeffhandley/issue-labeler
        ref: main

    - name: "Restore pulls model from cache"
      uses: jeffhandley/issue-labeler/restore@main
      with:
        type: ${{ inputs.type }}
        cache_key: ${{ inputs.cache_key || 'staged' }}

    - uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        dotnet-version: "9.0.x"

    - name: "Run Tester"
      shell: bash
      run: |
        dotnet run -c Release --project IssueLabeler/src/Tester --  \
          ${{ format('--repo "{0}"', inputs.repository || github.repository) }} \
          ${{ format('--label-prefix "{0}"', inputs.label_prefix) }} \
          ${{ format('--threshold {0}', inputs.threshold) }} \
          ${{ format('--{0}-model "labeler-cache/{0}-model.zip"', inputs.type) || '' }} \
          ${{ (inputs.limit != null && format('--{0}-limit {1}', inputs.type, inputs.limit)) || '' }}
