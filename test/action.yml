name: "Test Model"
description: "Test predictions against the Issues and/or Pull Requests model by downloading data and comparing predictions against existing labels."

branding:
  color: "purple"
  icon: "tag"

inputs:
  type:
    description: "The model to test. Must be either 'issues' or 'pulls'."
    required: true
  label_prefix:
    description: "The label prefix to use for model training. Must end with a non-alphanumeric character."
    required: true
  threshold:
    description: "The minimum confidence score for a label prediction. Must be a number between 0.00 and 1.00. The recommended value is 0.40."
    required: true
  excluded_authors:
    description: "A comma-separated list of authors to exclude."
  limit:
    description: "The maximum number of items to download. The newest items are downloaded."
  page_size:
    description: "The number of items per page in GitHub API requests. Defaults to 100 for Issues and 25 for Pull Requests."
  page_limit:
    description: "The maximum number of pages to retrieve. Defaults to 1000 for Issues and 4000 for Pull Requests."
  retries:
    description: "A comma-separated list of retry delays in seconds. Defaults to '30,30,300,300,3000,3000'."
  cache_key:
    description: "The cache key suffix to use for saving data. Defaults to 'staged'."
    default: staged
  repository:
    description: "The org/repo to download data from. Defaults to the current repository."
  verbose:
    description: "Enable verbose output."

runs:
  using: "composite"
  steps:
    - name: "Validate Inputs"
      shell: bash
      run: |
        if [[ "${{ inputs.type }}" != "issues" && "${{ inputs.type }}" != "pulls" ]]; then
          echo "::error::'type' must be either 'issues' or 'pulls'. Value provided: '${{ inputs.type }}'."
          echo "> [!CAUTION]" >> $GITHUB_STEP_SUMMARY
          echo "\`type\` must be either 'issues' or 'pulls'." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        repository: jeffhandley/issue-labeler
        ref: c319ff273660bf59adeb795d14bc03774ed4e733 # v2.0.0

    - name: "Restore model from cache"
      uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        path: "labeler-cache/${{ inputs.type }}-model.zip"
        key: "issue-labeler/model/${{ inputs.type }}/${{ inputs.cache_key || 'staged' }}"
        fail-on-cache-miss: true

    - name: "Set up the .NET SDK"
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        dotnet-version: "9.0.x"

    - name: "Run Tester"
      shell: bash
      run: |
        dotnet run -c Release --project IssueLabeler/src/Tester --  \
          ${{ format('--repo "{0}"', inputs.repository || github.repository) }} \
          ${{ format('--label-prefix "{0}"', inputs.label_prefix) }} \
          ${{ format('--threshold {0}', inputs.threshold) }} \
          ${{ format('--{0}-model "labeler-cache/{0}-model.zip"', inputs.type) || '' }} \
          ${{ inputs.excluded_authors && format('--excluded-authors "{0}"', inputs.excluded_authors) || '' }} \
          ${{ inputs.limit && format('--{0}-limit {1}', inputs.type, inputs.limit) || '' }} \
          ${{ inputs.page_size && format('--page-size {0}', inputs.page_size) || '' }} \
          ${{ inputs.page_limit && format('--page-limit {0}', inputs.page_limit) || '' }} \
          ${{ inputs.retries && format('--retries {0}', inputs.retries) || '' }} \
          ${{ inputs.verbose && '--verbose' || '' }}
