name: "Train Models for Issues and/or Pulls"
description: "Train the issue and/or pull models for label prediction."

inputs:
  issues:
    description: "Set to true to train the issues model"
    required: true
  pulls:
    description: "Set to true to train the pulls model"
    required: true
  data_cache_key:
    description: "The optional cache key suffix to use for loading the data"
    required: false
  model_cache_key:
    description: "The cache key suffix to use for saving the model"
    required: true

branding:
  color: "purple"
  icon: "tag"

runs:
  using: "composite"
  steps:
    - name: "Set Environment Variables for Issues"
      if: ${{ inputs.issues }}
      run: |
        echo "ISSUE_DATA_PATH=labeler-cache/issue-data.tsv" >> $GITHUB_ENV
        echo "ISSUE_DATA_CACHE_KEY=${{ format('issue-labeler/issues/data{0}', inputs.data_cache_key && format('/{0}', inputs.data_cache_key) || '') }}" >> $GITHUB_ENV
        echo "ISSUE_MODEL_PATH=labeler-cache/issue-model.zip" >> $GITHUB_ENV
        echo "ISSUE_MODEL_CACHE_KEY=${{ format('issue-labeler/issues/model/{0}', inputs.model_cache_key) }}" >> $GITHUB_ENV
        echo "ISSUE_BACKUP_CACHE_KEY=${{ format('issue-labeler/issues/model/{0}/backup', inputs.model_cache_key) }}" >> $GITHUB_ENV

    - name: "Set Environment Variables for Pulls"
      if: ${{ inputs.pulls }}
      run: |
        echo "PULL_DATA_PATH=labeler-cache/pull-data.tsv" >> $GITHUB_ENV
        echo "PULL_DATA_CACHE_KEY=${{ format('issue-labeler/pulls/data{0}', inputs.data_cache_key && format('/{0}', inputs.data_cache_key) || '') }}" >> $GITHUB_ENV
        echo "PULL_MODEL_PATH=labeler-cache/pull-model.zip" >> $GITHUB_ENV
        echo "PULL_MODEL_CACHE_KEY=${{ format('issue-labeler/pulls/model/{0}', inputs.model_cache_key) }}" >> $GITHUB_ENV
        echo "PULL_BACKUP_CACHE_KEY=${{ format('issue-labeler/pulls/model/{0}/backup', inputs.model_cache_key) }}" >> $GITHUB_ENV

    # Check out the repository before restoring the cache
    # This ensures that any restored files are not removed during the checkout process
    - name: "Check out the 'jeffhandley/issue-labeler' repo"
      uses: actions/checkout@v4
      with:
        repository: jeffhandley/issue-labeler
        ref: main

    - name: "Restore Data Cache for Issues"
      if: ${{ inputs.issues }}
      id: restore-cache-issues
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.ISSUE_DATA_PATH }}
        key: ${{ env.ISSUE_DATA_CACHE_KEY }}
        fail-on-cache-miss: true

    - name: "Restore Data Cache for Pulls"
      if: ${{ inputs.pulls }}
      id: restore-cache-pulls
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.PULL_DATA_PATH }}
        key: ${{ env.PULL_DATA_CACHE_KEY }}
        fail-on-cache-miss: true

    - name: "Restore Model Cache for Issues"
      if: ${{ inputs.issues }}
      id: check-cache-issues
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.ISSUE_MODEL_PATH }}
        key: ${{ env.ISSUE_MODEL_CACHE_KEY }}
        fail-on-cache-miss: false

    - name: "Restore Model Cache for Pulls"
      if: ${{ inputs.pulls }}
      id: check-cache-pulls
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.PULL_MODEL_PATH }}
        key: ${{ env.PULL_MODEL_CACHE_KEY }}
        fail-on-cache-miss: false

    - name: "Setup .NET SDK"
      if: ${{ inputs.issues || inputs.pulls }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: "9.0.x"

    - name: "Run Trainer"
      if: ${{ inputs.issues || inputs.pulls }}
      run: |
        dotnet run -c Release --project ./src/Trainer -- \
        ${{ inputs.issues && format('--issue-data "{0}" --issue-model "{1}"', env.ISSUE_DATA_PATH, env.ISSUE_MODEL_PATH) || '' }} \
        ${{ inputs.pulls && format('--pull-data "{0}" --pull-model "{1}"', env.PULL_DATA_PATH, env.PULL_MODEL_PATH) || '' }}

    - name: "Save Model Cache for Issues"
      if: ${{ inputs.issues }}
      uses: actions/cache/save@v4
      with:
        path: ${{ env.ISSUE_MODEL_PATH }}
        key: ${{ env.ISSUE_MODEL_CACHE_KEY }}

    - name: "Save Model Cache for Pulls"
      if: ${{ inputs.pulls }}
      uses: actions/cache/save@v4
      with:
        path: ${{ env.PULL_MODEL_PATH }}
        key: ${{ env.PULL_MODEL_CACHE_KEY }}
